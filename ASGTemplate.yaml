AWSTemplateFormatVersion: "2010-09-09"
Description: ASG Setup with Instance Roles, ASGs, Launch Templates & Security Groups.


Parameters:
  AMIID:
    Description: The ID of the AMI the ASG will use when launching new Instances.
    Type: List<AWS::EC2::Image::Id>
    Default: ami-03ac5a9b225e99b02
  InstanceType:
    Description: Type of Instance the ASG will launch (e.g. m5.large)
    Type: String
  Monitoring:
    Description: Select if Enhanced Monitoring should be enabled on the ASG Instances.
    Type: String
    AllowedValues:
      - True
      - False
  NotificationEmail:
    Description: Email address that will be sent scaling notifications from the ASG (a single shared email is advised).
    Type: String
  Alarms:
    Description: Select True to create CloudWatch Alarms for the ASG/Instances inside it.
    Type: String
    AllowedValues:
      - True
      - False

Conditions:
  # Determines if CloudWatch Alarms will be created or not (Based on Alarms parameter)
  CWAlarms: !Equals
    - !Ref Alarms
    - True

Resources:
  # Site ASG Config
  WebsiteASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: SiteASG
      MinSize: 1
      DesiredCapacity: 5
      MaxSize: 10
      HealthCheckType: ELB
      LaunchTemplate: !Ref WebsiteLaunchTemplate
      # TargetGroupARNs: Ref TargetGroup here if connecting to ALB
      NotificationConfigurations:
        NotificationTypes: 
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        TopicARN: !Ref ScalingNotificationsSNS

  # Site ASG Launch Template
  WebsiteLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 8
              VolumeType: gp2
        IamInstanceProfile: !Ref ASGInstanceProfile
        ImageId: !Ref AMIID
        InstanceType: !Ref InstanceType
        SecurityGroupIds: !GetAtt ASGSecurityGroup.GroupId
        Monitoring: !Ref Monitoring
        Placement:
          GroupName: !Ref WebsitePlacementGroup

  # Placement Group for Instances inside WebsiteASG
  WebsitePlacementGroup:
    Type: AWS::EC2::PlacementGroup
    Properties: 
      Strategy: spread

  # ASG Security Group
  ASGSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group used to control the inbound traffic to the ASG created EC2 instances.
      GroupName: !Sub Website-ASG-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        Description: Allow HTTPS traffic from ALB-SG # Rule Descriptions dont seem to work, need to investigate this further
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp # Uncomment this rule & link RDS SG to allow traffic from DB if there is one
      #   Description: Allow MySQL traffic from RDS SecurityGroup
      #   FromPort: 3389
      #   ToPort: 3389
      #   SourceSecurityGroupId: # Database Security would be referenced here

  # Role that allows EC2 to connect to SSM
  ASGInstancesSSMRole:
    Type: AWS::IAM::Role
    Properties:
      Description: IAM Role allowing instances inside the WebsiteASG to connect to SSM.
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      RoleName: !Sub WebsiteASG-SSMRole-${AWS::AccountId}

  # Instance Profile for SSM Role
  ASGInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub
        - ${RoleName}-InstanceProfile
        - { RoleName: !Ref ASGInstancesSSMRole }
      Roles: 
        - !Ref ASGInstancesSSMRole

  # SNS Topic for ASG Scaling Notifications
  ScalingNotificationsSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: ASGScalingNotificationsTopic
      Subscription:
        - Endpoint: !Ref NotificationEmail
          Protocol: email

  CWAlarmCPUWarning:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CWAlarms
    Properties:
      AlarmName: "EC2CPUWarning"
      AlarmDescription: "A CloudWatch Alarm that triggers when the CPU utilisation of an instance is greater than 70%."
      MetricName: "EC2InstanceEventCount"
      Namespace: "CloudTrailMetrics"
      Statistic: "Sum"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: "1"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - Ref: ScalingNotificationsSNS
      TreatMissingData: "notBreaching"

  CWAlarmCPUCritical:
    Type: "AWS::CloudWatch::Alarm"
    Condition: CWAlarms
    Properties:
      AlarmName: "EC2CPUCritical"
      AlarmDescription: "A CloudWatch Alarm that triggers when the CPU utilisation of an instance is greater than 90%."
      MetricName: "EC2InstanceEventCount"
      Namespace: "CloudTrailMetrics"
      Statistic: "Sum"
      Period: "300"
      EvaluationPeriods: "3"
      Threshold: "1"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - Ref: ScalingNotificationsSNS
      TreatMissingData: "notBreaching"